Additional Notes Following Lecture:
Thank you for your attendance and participation in lecture today. I appreciate your feedback on how the course went and your patience with my delivery.

Andy has the lecture on Thursday. It should be fun. He'll be presenting a tool that automatically submits dailies, which I'm sure would've been more helpful to you at the beginning of the course. ;)


My sense from the class discussion is that, on the whole, people think we were successful in completing what we set out to do this term. If you think we failed, I very much would like to hear more about your experience (anonymous via piazza, on your course evaluation, or whatever other mechanism may be comfortable for you).

A few data points I capture regarding meeting our objectives for the course were:
Being able to see good code vs spagetti code in my codebase
Seeing the improvement in my code quality
Figured out how to use git which will be useful on future projects
Topics and work done in the course were relevant for interviews
Developed confidence in being able to learn unknown technology
The course refocus was a success


We also went through some abbreviated artifacts I generated regarding things I thought went well and not so well in the course delivery. My thoughts are in the slides, these are the thoughts I captured:

Daily status - Green
These were helpful to show progress to myself
They were less work than I initially thought they would be
Maybe dailies should be extra credit or there should be an expectation to skip several
The ability to submit multiple times per day should probably be made more obvious

VMs - Yellow
Free hosting via Heroku
Hosting won't work for bad Internet connections; maybe hosted and optionally local

Monday Due Date - Yellow
Monday is better than Friday due to load balance across courses
Wednesday might be a better day, starting early you still get the weekend
Assignments should lag the lecture more, Wednesday may help with this

Business Req Descriptions - Red
Liked seeing what it would be like in practice
Might work better as an exercise rather than the assignment pattern
Could present in parallel, business req and matching assignment
Might have worked if we understood the technology first
The steps were too big which encouraged tech debt
Even though it was painful I feel like a got a lot from the exercises
Maybe this works better as a follow-on to on of the in class design exercises

Lecture like dev meeting - Red
Could maybe work as small group meetings during lecture or office hours
Maybe add a lab section <- this suggestion was seconded many times


I was running out of time, so I skipped quickly through the other slides reviewing the course as a project... but did capture the following:
There was a recommendation that the lack of a book would've been better handled if a better collection of links had been provided.
A Flask book was recommended
A tutorial on SQL would've also been helpful.


We took a brief interlude to discuss the final. The final will look very much like the mid-term. Examples of the new question forms have been posted on the schedule page.


Of course, you all have been running your own projects as well. So, for the benefit of the class I tried to encourage discussion of things you learned during your own implementations. I captured the following items:
I wish I had implemented my error handling sooner.
I wish I had known about sshfs sooner
I wish I had used print statements more often to help debug
Starting early was important in a way it hasn't been in other classes
    - Estimating the time things would take was much harder due to the number of technologies
    - Writing out a plan made the code easier to work through
I wish I had started writing helper scripts sooner
Risk assessment for each assignment really helped since I knew what to expect and could get the answers needed in office hours.
Skeleton code made completing the assignments easier.


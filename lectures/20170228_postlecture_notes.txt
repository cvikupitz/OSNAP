Additional Notes Following Lecture:
Thank you for your attendance at lecture. Sorry today wasn't one of the stronger presentations.


We talked a little bit about functions, which are units of computation.
- Functions increase readability
- Functions add modularity, allowing a single fix to effect several parts of the code
- Functions allow the how to be hidden
    -- Blackbox abstraction can be useful for design. Imagine there is a function that solves this problem, then continue design.
    -- Blackbox abstraction can be useful for delegation. Describe what the function should do and let someone else implement.
    
We like abstraction, assembly is not particularly fun.
- A lot of work to express an idea since each line does little work
- There are a lot of details to keep track of
- Dealing with low-level memory management is distracting

Our programming language is a layer of abstraction on top of assembly. This makes programming easier since it reduces the amount of how we have to keep in mind.

Similarly, programs are a layer of abstraction on top of the programming language. This make system design easier since it similarly reduces the details.


The typical model we have for program execution is an uninterrupted serial model. This only works for activity within a program. Once we have multiple programs running, or even multiple threads within one program, we gain problems with concurrency. When things happen can impact execution and are hard to reason about. There are a few mechanisms to handle communication across these boundaries (e.g. shared memory, sockets, queues, remote procedure calls). All of these communication mechanisms have some latency, so it becomes impossible to actually know the global state at a particular point in time. Logical clocks are a way to track causality but do not actually communicate when events happened.


We talked a little bit about the capabilities that each part of our technology stack provides for the application we are working on. Before looking at some code around GET type requests with HTTP and flask. The code we developed can be found in my lost repository in the feb28demo branch.


We also worked on some screen mockups and data modeling for assignment8.
Additional Notes Following Lecture:


Thank you for your participation in lecture today. Two important items of discussion were what we would 
like from code reviews and the configuration file format we should use. I also failed to cover an important 
bootstrapping issue for assignment 3 grading.

Much of the other lecture material on architecture is in the 
slide deck. Most of this material is more background than anything else. I would like you to be able to identify 
when resources are likely insufficient and be able to estimate what would be needed using a simple linear model 
(e.g. 1000 transactions per second and 10 ms per transaction on a single host indicate that at least 10 hosts 
will be required to meet demand). Similar estimates can be made regarding bandwidth or disk.




################################

Code Reviews:

As a class we are interested in:
    
- Substance over style. Everyone has their own coding style. It is important to learn to read code written in 
a style other than your own. Comments should focus on the substance and structure of the code more than the 
visual style.
    
    
- Extensibility. How easy would this code be to extend with additional features or make changes to if bugs 
were discovered? Looking at the code structure, we may look for:
        
- Decomposition: What are the major functional components?
        
- Compartmentalization: Are the interfaces between components well defined? are these boundaries well respect?
        
- Comments are good. Are there comments? Do they give the right information about what is happening in a component?
    
   
- What assumptions were made? Are any of these assumptions likely to be trouble?
    
    
- We all approach problems differently and understanding how the contrasting in solutions work helps to develop 
our own solution toolkit. How do I understand this code in contrast to my own solution.
    
    
- Most importantly, what is great about this code? Everyone's code has at least one thing that is interesting or 
particularly well done. Be sure to include and call that out in your code review text.


DERP will pre-populate the 
code review form with a template than Andy likes to use for code reviews. His template may not capture what we've 
decided we care about for code reviews, feel free to invent your own template that better covers what we care about 
as a class. Code reviews are expected to be complete within a week of being assigned.



################################

Configuration file format:

Wednesday I'll lock in the configuration file format for LOST; which will be communicated via piazza and changes 
to the LOST specification document. The configuration file will be located at a well known path. For assignment 3, 
three configuration fields will be used dbname, dbhost, and dbport.



################################

Bootstrapping for Grading:

Since the assignment 2 code may or may not be working correctly in time for assignment 3 grading, we need to 
provide a mechanism for you to instantiate your tables and populate the database with some data.

Your repository 
should include a script called 'preflight.sh' at the top level of your repository. This script will be run with 
'bash preflight.sh <dbname>. The postgres instance will be running and createdb <dbname> will have been executed 
prior to running your preflight script from the top level of your repository. preflight.sh should run your 
create_tables.sql script to initialize the tables and then run whatever commands are need to populate the database 
so that the reports can be shown to be working (if your assignment 2 is complete just run the data migration, if your 
assignment 2 is incomplete run an sql script that inserts the needed rows into the correct tables).